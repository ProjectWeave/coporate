{"ast":null,"code":"import { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_GROUP_REQUEST, ADD_GROUP_SUCCESS, ADD_GROUP_FAILURE } from '../reducers/post';\n\nfunction addPostAPI() {}\n\nfunction addCommentAPI() {}\n\nfunction addGroupPosttAPI() {}\n\nfunction* addPost() {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* addComment(action) {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId\n      }\n    });\n  } catch (e) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* addGroupPost(action) {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_GROUP_SUCCESS,\n      data: {\n        postId: action.data.postId\n      }\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_GROUP_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchAddGroupPost() {\n  yield takeLatest(ADD_GROUP_REQUEST, addGroupPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment), fork(watchAddGroupPost)]);\n}","map":{"version":3,"sources":["C:/Users/이귀영/Documents/coporate/weave/src/ch1/front/sagas/post.js"],"names":["all","delay","fork","put","takeLatest","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_GROUP_REQUEST","ADD_GROUP_SUCCESS","ADD_GROUP_FAILURE","addPostAPI","addCommentAPI","addGroupPosttAPI","addPost","type","e","error","addComment","action","data","postId","console","err","addGroupPost","watchAddPost","watchAddComment","watchAddGroupPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,QAAkD,oBAAlD;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,mBAAnD,EAAwEC,gBAAxE,EAA0FC,gBAA1F,EAA4GC,gBAA5G,EAA8HC,iBAA9H,EAAiJC,iBAAjJ,EAAoKC,iBAApK,QAA6L,kBAA7L;;AAGA,SAASC,UAAT,GAAqB,CAEpB;;AACD,SAASC,aAAT,GAAwB,CAEvB;;AACD,SAASC,gBAAT,GAA2B,CAE1B;;AAGD,UAAUC,OAAV,GAAoB;AAChB,MAAI;AACF,UAAMhB,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAER;AADE,KAAD,CAAT;AAGD,GALD,CAKE,OAAOS,CAAP,EAAU;AACV,UAAMhB,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEV,gBADE;AAERY,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAEH,UAAUE,UAAV,CAAqBC,MAArB,EAA4B;AACxB,MAAG;AACC,UAAMrB,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAEX,mBADA;AAENgB,MAAAA,IAAI,EAAC;AACDC,QAAAA,MAAM,EAAGF,MAAM,CAACC,IAAP,CAAYC;AADpB;AAFC,KAAD,CAAT;AAMH,GARD,CAQE,OAAOL,CAAP,EAAS;AACPM,IAAAA,OAAO,CAACL,KAAR,CAAcM,GAAd;AACA,UAAMvB,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAEb,mBADA;AAENe,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUQ,YAAV,CAAuBL,MAAvB,EAA8B;AAC1B,MAAG;AACC,UAAMrB,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAEN,iBADA;AAENW,MAAAA,IAAI,EAAC;AACDC,QAAAA,MAAM,EAAGF,MAAM,CAACC,IAAP,CAAYC;AADpB;AAFC,KAAD,CAAT;AAMH,GARD,CAQE,OAAOL,CAAP,EAAS;AACP,UAAMhB,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAEL,iBADA;AAENO,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUS,YAAV,GAAwB;AACpB,QAAMxB,UAAU,CAACK,gBAAD,EAAmBQ,OAAnB,CAAhB;AACH;;AAED,UAAUY,eAAV,GAA2B;AACvB,QAAMzB,UAAU,CAACE,mBAAD,EAAsBe,UAAtB,CAAhB;AACH;;AAED,UAAUS,iBAAV,GAA6B;AACzB,QAAM1B,UAAU,CAACO,iBAAD,EAAoBgB,YAApB,CAAhB;AACH;;AAGD,eAAe,UAAUI,QAAV,GAAoB;AAC/B,QAAM/B,GAAG,CAAC,CACNE,IAAI,CAAC0B,YAAD,CADE,EAEN1B,IAAI,CAAC2B,eAAD,CAFE,EAGN3B,IAAI,CAAC4B,iBAAD,CAHE,CAAD,CAAT;AAKH","sourcesContent":["import { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_GROUP_REQUEST, ADD_GROUP_SUCCESS, ADD_GROUP_FAILURE } from '../reducers/post';\r\n\r\n\r\nfunction addPostAPI(){\r\n\r\n}\r\nfunction addCommentAPI(){\r\n\r\n}\r\nfunction addGroupPosttAPI(){\r\n\r\n}\r\n\r\n\r\nfunction* addPost() {\r\n    try {\r\n      yield delay(2000);\r\n      yield put({\r\n        type: ADD_POST_SUCCESS,\r\n      });\r\n    } catch (e) {\r\n      yield put({\r\n        type: ADD_POST_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n\r\nfunction* addComment(action){\r\n    try{\r\n        yield delay(2000);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data:{\r\n                postId : action.data.postId,\r\n            },\r\n        });\r\n    } catch (e){ \r\n        console.error(err)\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* addGroupPost(action){\r\n    try{\r\n        yield delay(2000);\r\n        yield put({\r\n            type: ADD_GROUP_SUCCESS,\r\n            data:{\r\n                postId : action.data.postId,\r\n            },\r\n        });\r\n    } catch (e){ \r\n        yield put({\r\n            type: ADD_GROUP_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddPost(){\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchAddComment(){\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nfunction* watchAddGroupPost(){\r\n    yield takeLatest(ADD_GROUP_REQUEST, addGroupPost);\r\n}\r\n\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n        fork(watchAddGroupPost),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}