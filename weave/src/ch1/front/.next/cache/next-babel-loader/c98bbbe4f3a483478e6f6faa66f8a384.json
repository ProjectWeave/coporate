{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uADC0\\uC601\\\\Documents\\\\coporate\\\\weave\\\\src\\\\ch1\\\\front\\\\components\\\\File.js\";\nvar __jsx = React.createElement;\n//import React from 'react';\nimport React, { useCallback, useState, useEffect } from 'react'; //import { useSelector, useDispatch } from 'react-redux';\n//import axios from 'axios';\n\nimport './Templete.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_GROUP_REQUEST } from '../reducers/post';\n\nconst File = ({\n  gpost\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: text,\n    1: setText\n  } = useState(''); //const [file, setFile ] = useState(null);\n  //const [selctedFile, setSelctedFile ] = useState(null);\n\n  const {\n    addingGroupPost,\n    addedGroupPost\n  } = useSelector(state => state.post); //text 초기값\n\n  const {\n    0: grouptit,\n    1: setGrouptit\n  } = useState('');\n  const {\n    0: grouptext,\n    1: setGrouptext\n  } = useState('');\n\n  const InputChangeTit = e => {\n    e.preventDefault(); // console.log(e.target.value);\n\n    setGrouptit(e.target.value);\n  };\n\n  const InputChangeText = e => {\n    setGrouptext(e.target.value);\n  }; //단일 이미지 미리보기\n\n\n  const {\n    0: img,\n    1: setImg\n  } = useState(null);\n  const onChangeImage = useCallback(e => {\n    var reader = new FileReader();\n    reader.readAsDataURL(e.target.files[0]);\n\n    reader.onloadend = function () {\n      setImg(reader.result);\n    };\n  }, []); // 취소버튼클릭시 파일창닫기\n\n  const popBlockClose = e => {\n    e.preventDefault();\n    let pop = document.querySelector(\".pop\");\n    let block = document.querySelector(\".block\");\n    pop.style.display = \"none\";\n    block.style.display = \"none\";\n    setGrouptit('');\n    setGrouptext('');\n    setImg(null);\n  }; // 그룹만들기서브밋\n\n\n  const onSubmitGroup = useCallback(e => {\n    e.preventDefault(); // debugger;\n    // console.log(e);\n\n    dispatch({\n      type: ADD_GROUP_REQUEST,\n      data: {}\n    });\n  }, []); //그룹포스트올리기성공하면 텍스트 초기화 & 창닫히기\n\n  useEffect(() => {\n    setText('');\n  }, [addedGroupPost === true]);\n  return __jsx(\"form\", {\n    className: \"pop\",\n    encType: \"multipart/form-data\",\n    method: \"post\",\n    name: \"gg\",\n    onSubmit: onSubmitGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"gimg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"filebox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"\\uC0AC\\uC9C4\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"), __jsx(\"input\", {\n    type: \"file\",\n    id: \"file\",\n    onChange: onChangeImage,\n    accept: \".jpg, .jpeg, .png\",\n    className: \"upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"name\",\n    className: \"gtit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \" \\uADF8\\uB8F9\\uC774\\uB984\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"gname\",\n    className: \"gname\",\n    value: grouptit,\n    onChange: InputChangeTit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"name\",\n    className: \"gtit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \" \\uADF8\\uB8F9\\uC18C\\uAC1C\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"gintro\",\n    className: \"gintro\",\n    value: grouptext,\n    onChange: InputChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    className: \"send\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"submit\",\n    value: \"\\uC62C\\uB9AC\\uAE30\",\n    loading: addingGroupPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"button\",\n    value: \"\\uCDE8\\uC18C\",\n    onClick: popBlockClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))));\n};\n\nexport default File; // import React, { Component } from \"react\";\n// import './test.css';\n// class File extends Component{\n// inputChangedHandler = e => {\n//   const { changeInput } = this.props;\n//   const { name, value } = e.target;\n//   console.log(\"clicked\", name, value);\n//   changeInput({ name, value });\n// };\n// htmlChangedHandler = ({ name, value }) => {\n//   const { changeInput } = this.props;\n//   changeInput({ name, value });\n// };\n// fileSelectedHandler = e => {\n//   console.log(e.target.files[0]);\n// // changeInput = ({ name, value }) => {\n// //   const { onChangeInput } = this.props;\n// //   onChangeInput({ name, value });\n// // };\n// // changeFile = (name, file) => {\n// //   const { onChangeFile } = this.props;\n// //   onChangeFile(name, file);\n// // };\n//   if (e.target.files != null || e.target.files[0] != null) {\n//     const { changeFile } = this.props;\n//     const { name } = e.target;\n//     let reader = new FileReader();\n//     reader.onload = e => {\n//       this.refImg.setAttribute(\"src\", e.target.result);\n//       console.log(e.target.result);\n//       changeFile(name, e.target.result);\n//     };\n//     reader.readAsDataURL(e.target.files[0]);\n//   }\n// };\n// render() {\n//   const {\n//     title,\n//     sub,\n//     img,\n//     submitPost,\n//     isEdit\n//   } = this.props;\n//     return(\n//       <div className=\"\">\n//       <form className=\"pop\" onSubmit={submitPost}>\n//             <div>\n//               <input\n//                 style={{ display: \"none\" }}\n//                 type=\"file\"\n//                 name=\"img\"\n//                 onChange={this.fileSelectedHandler}\n//                 ref={ref => (this.refInput = ref)}\n//               />\n//               <div className=\"filebox\">\n//                 {/* <h4>그룹 사진 업로드</h4> */}\n//                 <button type=\"button\" onClick={() => this.refInput.click()}>\n//                   사진을 선택해주세요.\n//                 </button>\n//               </div>\n//               <div className=\"\">\n//                 <img\n//                   ref={ref => (this.refImg = ref)}\n//                   alt={img ? \"seleted_image\" : null}\n//                   src={img ? img : null}\n//                   align=\"middle\"\n//                   width=\"100%\"\n//                   height=\"100%\"\n//                 />\n//               </div>\n//             </div>\n//           <div className=\"group\">\n//             <input\n//               type=\"text\"\n//               name=\"title\"\n//               value={title}\n//               className=\"gname\"\n//               placeholder=\"그룹이름을 입력하세요\"\n//               onChange={this.inputChangedHandler}\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"sub\"\n//               value={sub}\n//               className=\"gintro\"\n//               placeholder=\"그룹 소개를 입력하세요\"\n//               onChange={this.inputChangedHandler}\n//             />\n//             <div className=\"\">\n//               <button theme=\"point-big\" type=\"submit\">\n//                 {isEdit ? \"수정\" : \"저장\"}하기\n//               </button>\n//             </div>\n//           </div>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n// export default File;","map":{"version":3,"sources":["C:/Users/이귀영/Documents/coporate/weave/src/ch1/front/components/File.js"],"names":["React","useCallback","useState","useEffect","useSelector","useDispatch","ADD_GROUP_REQUEST","File","gpost","dispatch","text","setText","addingGroupPost","addedGroupPost","state","post","grouptit","setGrouptit","grouptext","setGrouptext","InputChangeTit","e","preventDefault","target","value","InputChangeText","img","setImg","onChangeImage","reader","FileReader","readAsDataURL","files","onloadend","result","popBlockClose","pop","document","querySelector","block","style","display","onSubmitGroup","type","data"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD,C,CACA;AACA;;AACA,OAAO,gBAAP;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAUC,iBAAV,QAAmC,kBAAnC;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACtB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAA,OAACK,IAAD;AAAA,OAAOC;AAAP,MAAmBT,QAAQ,CAAC,EAAD,CAAjC,CAFsB,CAGtB;AACA;;AACA,QAAM;AAAEU,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAsCT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAvD,CALsB,CAOtB;;AACA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACgB,SAAD;AAAA,OAAYC;AAAZ,MAA4BjB,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMkB,cAAc,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF,GAD4B,CAE5B;;AACAL,IAAAA,WAAW,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAX;AACD,GAJD;;AAKA,QAAMC,eAAe,GAAIJ,CAAD,IAAO;AAC7BF,IAAAA,YAAY,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAZ;AACD,GAFD,CAhBsB,CAoBtB;;;AACA,QAAM;AAAA,OAACE,GAAD;AAAA,OAAMC;AAAN,MAAgBzB,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM0B,aAAa,GAAG3B,WAAW,CAAEoB,CAAD,IAAK;AACnC,QAAIQ,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBV,CAAC,CAACE,MAAF,CAASS,KAAT,CAAe,CAAf,CAArB;;AACAH,IAAAA,MAAM,CAACI,SAAP,GAAmB,YAAY;AAC3BN,MAAAA,MAAM,CAACE,MAAM,CAACK,MAAR,CAAN;AACD,KAFH;AAGH,GANgC,EAM/B,EAN+B,CAAjC,CAtBsB,CA8BtB;;AACA,QAAMC,aAAa,GAAId,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIc,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAV;AACA,QAAIC,KAAK,GAAGF,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAZ;AACAF,IAAAA,GAAG,CAACI,KAAJ,CAAUC,OAAV,GAAkB,MAAlB;AACAF,IAAAA,KAAK,CAACC,KAAN,CAAYC,OAAZ,GAAoB,MAApB;AACAxB,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAQ,IAAAA,MAAM,CAAC,IAAD,CAAN;AACD,GATD,CA/BsB,CA0CtB;;;AACA,QAAMe,aAAa,GAAGzC,WAAW,CAAEoB,CAAD,IAAO;AACvCA,IAAAA,CAAC,CAACC,cAAF,GADuC,CAEvC;AACA;;AACAb,IAAAA,QAAQ,CAAC;AACLkC,MAAAA,IAAI,EAAErC,iBADD;AAELsC,MAAAA,IAAI,EAAE;AAFD,KAAD,CAAR;AAMH,GAVkC,EAUhC,EAVgC,CAAjC,CA3CsB,CAuDxB;;AACAzC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAAC,EAAD,CAAP;AAED,GAHQ,EAGP,CAACE,cAAc,KAAK,IAApB,CAHO,CAAT;AAME,SACE;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAsB,IAAA,OAAO,EAAC,qBAA9B;AAAoD,IAAA,MAAM,EAAC,MAA3D;AAAkE,IAAA,IAAI,EAAC,IAAvE;AAA4E,IAAA,QAAQ,EAAE6B,aAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEhB,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAKE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEADF,EAEE;AAAO,IAAA,IAAI,EAAG,MAAd;AAAqB,IAAA,EAAE,EAAC,MAAxB;AAA+B,IAAA,QAAQ,EAAEE,aAAzC;AACO,IAAA,MAAM,EAAC,mBADd;AACkC,IAAA,SAAS,EAAC,QAD5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,EAWE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAE,MAAhB;AAAuB,IAAA,SAAS,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,SAAS,EAAC,OAA1C;AAAkD,IAAA,KAAK,EAAEZ,QAAzD;AAAmE,IAAA,QAAQ,EAAEI,cAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAO,IAAA,OAAO,EAAE,MAAhB;AAAuB,IAAA,SAAS,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAHF,EAIE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,QAAxB;AAAiC,IAAA,SAAS,EAAC,QAA3C;AAAoD,IAAA,KAAK,EAAEF,SAA3D;AAAsE,IAAA,QAAQ,EAAEO,eAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,oBAA3B;AAAiC,IAAA,OAAO,EAAEb,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,cAA3B;AAAgC,IAAA,OAAO,EAAEuB,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,CAXF,CADF;AAwBH,CAtFD;;AAuFA,eAAe5B,IAAfsourcesContent":["//import React from 'react';\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\n//import { useSelector, useDispatch } from 'react-redux';\r\n//import axios from 'axios';\r\nimport './Templete.css';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {  ADD_GROUP_REQUEST } from '../reducers/post';\r\n\r\n\r\nconst File = ({gpost}) => {\r\n    const dispatch = useDispatch();\r\n    const [text, setText ] = useState('');\r\n    //const [file, setFile ] = useState(null);\r\n    //const [selctedFile, setSelctedFile ] = useState(null);\r\n    const { addingGroupPost, addedGroupPost } = useSelector(state => state.post);\r\n    \r\n    //text 초기값\r\n    const [grouptit, setGrouptit] = useState('');\r\n    const [grouptext, setGrouptext] = useState('');\r\n\r\n    const InputChangeTit = (e) => {\r\n      e.preventDefault();\r\n      // console.log(e.target.value);\r\n      setGrouptit(e.target.value);\r\n    };\r\n    const InputChangeText = (e) => {\r\n      setGrouptext(e.target.value);\r\n    };\r\n\r\n    //단일 이미지 미리보기\r\n    const [img, setImg] = useState(null);\r\n    const onChangeImage = useCallback((e)=>{\r\n        var reader = new FileReader();\r\n        reader.readAsDataURL(e.target.files[0]);\r\n        reader.onloadend = function () {\r\n            setImg(reader.result)\r\n          }\r\n    },[])\r\n\r\n    // 취소버튼클릭시 파일창닫기\r\n    const popBlockClose = (e) => {\r\n      e.preventDefault();\r\n      let pop = document.querySelector(\".pop\")\r\n      let block = document.querySelector(\".block\")\r\n      pop.style.display=\"none\"\r\n      block.style.display=\"none\"\r\n      setGrouptit('');\r\n      setGrouptext('');\r\n      setImg(null);\r\n    };\r\n    \r\n    // 그룹만들기서브밋\r\n    const onSubmitGroup = useCallback((e) => {\r\n      e.preventDefault();\r\n      // debugger;\r\n      // console.log(e);\r\n      dispatch({\r\n          type: ADD_GROUP_REQUEST,\r\n          data: {\r\n            \r\n          },\r\n      });\r\n  }, []);\r\n\r\n  //그룹포스트올리기성공하면 텍스트 초기화 & 창닫히기\r\n  useEffect(() => {\r\n    setText('');\r\n    \r\n  },[addedGroupPost === true]);\r\n \r\n\r\n    return (\r\n      <form className=\"pop\" encType=\"multipart/form-data\" method=\"post\" name=\"gg\" onSubmit={onSubmitGroup}>\r\n        <div className=\"gimg\">\r\n          <img src={img} ></img>\r\n        </div>\r\n        \r\n        <div className=\"filebox\">\r\n          <label htmlFor =\"file\" >사진을 선택해주세요.</label>\r\n          <input type = \"file\" id=\"file\" onChange={onChangeImage} \r\n                 accept=\".jpg, .jpeg, .png\" className=\"upload\" /> \r\n        </div>\r\n        \r\n        <div className=\"group\">\r\n          <label htmlFor =\"name\" className=\"gtit\"> 그룹이름</label>\r\n          <input type=\"text\" name=\"gname\" className=\"gname\" value={grouptit} onChange={InputChangeTit} />\r\n          <label htmlFor =\"name\" className=\"gtit\"> 그룹소개</label>\r\n          <input type=\"text\" name=\"gintro\" className=\"gintro\" value={grouptext} onChange={InputChangeText} />\r\n          <p className=\"send\">\r\n            <input type=\"submit\" value=\"올리기\" loading={addingGroupPost} />\r\n            <input type=\"button\" value=\"취소\" onClick={popBlockClose} />\r\n          </p>\r\n        </div>\r\n      </form>\r\n    );\r\n};\r\nexport default File;\r\n\r\n// import React, { Component } from \"react\";\r\n// import './test.css';\r\n\r\n// class File extends Component{\r\n\r\n// inputChangedHandler = e => {\r\n//   const { changeInput } = this.props;\r\n//   const { name, value } = e.target;\r\n//   console.log(\"clicked\", name, value);\r\n//   changeInput({ name, value });\r\n// };\r\n\r\n// htmlChangedHandler = ({ name, value }) => {\r\n//   const { changeInput } = this.props;\r\n//   changeInput({ name, value });\r\n// };\r\n\r\n// fileSelectedHandler = e => {\r\n//   console.log(e.target.files[0]);\r\n\r\n// // changeInput = ({ name, value }) => {\r\n// //   const { onChangeInput } = this.props;\r\n// //   onChangeInput({ name, value });\r\n// // };\r\n\r\n// // changeFile = (name, file) => {\r\n// //   const { onChangeFile } = this.props;\r\n// //   onChangeFile(name, file);\r\n// // };\r\n\r\n//   if (e.target.files != null || e.target.files[0] != null) {\r\n//     const { changeFile } = this.props;\r\n//     const { name } = e.target;\r\n\r\n   \r\n//     let reader = new FileReader();\r\n//     reader.onload = e => {\r\n//       this.refImg.setAttribute(\"src\", e.target.result);\r\n//       console.log(e.target.result);\r\n//       changeFile(name, e.target.result);\r\n//     };\r\n//     reader.readAsDataURL(e.target.files[0]);\r\n//   }\r\n// };\r\n\r\n// render() {\r\n//   const {\r\n//     title,\r\n//     sub,\r\n//     img,\r\n//     submitPost,\r\n//     isEdit\r\n//   } = this.props;\r\n\r\n//     return(\r\n//       <div className=\"\">\r\n//       <form className=\"pop\" onSubmit={submitPost}>\r\n//             <div>\r\n//               <input\r\n//                 style={{ display: \"none\" }}\r\n//                 type=\"file\"\r\n//                 name=\"img\"\r\n//                 onChange={this.fileSelectedHandler}\r\n//                 ref={ref => (this.refInput = ref)}\r\n//               />\r\n//               <div className=\"filebox\">\r\n//                 {/* <h4>그룹 사진 업로드</h4> */}\r\n//                 <button type=\"button\" onClick={() => this.refInput.click()}>\r\n//                   사진을 선택해주세요.\r\n//                 </button>\r\n//               </div>\r\n//               <div className=\"\">\r\n//                 <img\r\n//                   ref={ref => (this.refImg = ref)}\r\n//                   alt={img ? \"seleted_image\" : null}\r\n//                   src={img ? img : null}\r\n//                   align=\"middle\"\r\n//                   width=\"100%\"\r\n//                   height=\"100%\"\r\n//                 />\r\n//               </div>\r\n//             </div>\r\n          \r\n\r\n//           <div className=\"group\">\r\n            \r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"title\"\r\n//               value={title}\r\n//               className=\"gname\"\r\n//               placeholder=\"그룹이름을 입력하세요\"\r\n//               onChange={this.inputChangedHandler}\r\n//             />\r\n            \r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"sub\"\r\n//               value={sub}\r\n//               className=\"gintro\"\r\n//               placeholder=\"그룹 소개를 입력하세요\"\r\n//               onChange={this.inputChangedHandler}\r\n//             />\r\n//             <div className=\"\">\r\n//               <button theme=\"point-big\" type=\"submit\">\r\n//                 {isEdit ? \"수정\" : \"저장\"}하기\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default File;\r\n\r\n"]},"metadata":{},"sourceType":"module"}