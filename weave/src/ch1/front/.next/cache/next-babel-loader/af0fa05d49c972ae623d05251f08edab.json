{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uADC0\\uC601\\\\Documents\\\\coporate\\\\weave\\\\src\\\\ch1\\\\front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post'; //임시로만든 데이터객체\n// const dummy={\n//     isLoggedIn: true,\n//     imagePaths:[],\n//     mainPosts:[{\n//         User:{\n//             id: 1,\n//             nickname: \"두리안\",\n//         },\n//             content: \"첫번째 게시글\",\n//             img:\"https://img1.daumcdn.net/thumb/R720x0/?fname=http://t1.daumcdn.net/liveboard/dailylife/187ea4bc2ad54b1db5030743265c5397.jpg\", \n//     }],\n// };\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    imagePaths,\n    isAddingPost,\n    postAdded\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    setText('');\n  }, [postAdded === true]);\n  const onSubmitForm = useCallback(e => {\n    e.preventDefault();\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        text\n      }\n    });\n  }, []);\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  return __jsx(\"form\", {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    htmlType: \"textarea\",\n    maxLength: 140,\n    placeholder: \"\\uC18C\\uC2DD\\uC744 \\uB0A8\\uACA8\\uC8FC\\uC138\\uC694\",\n    value: text,\n    onChange: onChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(\"button\", {\n    style: {\n      float: \"right\"\n    },\n    htmlType: \"submit\",\n    loading: isAddingPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, imagePaths.map(v => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: \"inline-block\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"http://localhost:3065/\".concat(v),\n    style: {\n      width: '200px'\n    },\n    alt: v,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"\\uC81C\\uAC70\"))))));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/이귀영/Documents/coporate/weave/src/ch1/front/components/PostForm.js"],"names":["React","useCallback","useState","useEffect","useSelector","useDispatch","ADD_POST_REQUEST","PostForm","dispatch","text","setText","imagePaths","isAddingPost","postAdded","state","post","onSubmitForm","e","preventDefault","type","data","onChangeText","target","value","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_POST_REQUEST } from '../reducers/post';\r\n\r\n//임시로만든 데이터객체\r\n// const dummy={\r\n//     isLoggedIn: true,\r\n//     imagePaths:[],\r\n//     mainPosts:[{\r\n//         User:{\r\n//             id: 1,\r\n//             nickname: \"두리안\",\r\n//         },\r\n//             content: \"첫번째 게시글\",\r\n//             img:\"https://img1.daumcdn.net/thumb/R720x0/?fname=http://t1.daumcdn.net/liveboard/dailylife/187ea4bc2ad54b1db5030743265c5397.jpg\", \r\n//     }],\r\n// };\r\n\r\nconst PostForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [text, setText ] = useState('');\r\n    const { imagePaths, isAddingPost, postAdded } = useSelector(state => state.post);\r\n    \r\n    useEffect(() => {\r\n        setText('');\r\n    },[postAdded === true]);\r\n\r\n    const onSubmitForm = useCallback((e) => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: {\r\n                text,\r\n            },\r\n        });\r\n    }, []);\r\n    \r\n    const onChangeText = useCallback((e) => {\r\n        setText(e.target.value);\r\n    }, []);\r\n    \r\n    return (\r\n        <form style={{ margin: '10px 0 20px'}} encType=\"multipart/form-data\" onSubmit={onSubmitForm}>\r\n            <input htmlType=\"textarea\" maxLength={140} placeholder=\"소식을 남겨주세요\" value={text} onChange={onChangeText}></input>\r\n            <div>\r\n                <input type=\"file\" multiple hidden></input>\r\n                <button>이미지 업로드</button>\r\n                <button style={{float:\"right\"}} htmlType=\"submit\" loading={isAddingPost}>짹짹</button>\r\n            </div>\r\n            <div>\r\n                {/* 반복문 */}\r\n                {imagePaths.map((v) => (\r\n                        <div key={v} style={{display:\"inline-block\"}}>\r\n                            <img src={`http://localhost:3065/${v}`} style={{ width:'200px'}} alt={v}></img> \r\n                            <div>\r\n                                <button>제거</button>\r\n                            </div>   \r\n                        </div>\r\n                ))}\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}