{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uADC0\\uC601\\\\Documents\\\\coporate\\\\weave\\\\src\\\\ch1\\\\front\\\\components\\\\ContentForm.js\";\nvar __jsx = React.createElement;\n// mode변경 test\nimport React, { useCallback, useState, useEffect, memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST } from '../reducers/post';\nimport '../components/Contents.css';\nimport Link from 'next/link';\nimport '../components/reset.css';\nconst ContentForm = memo(() => {\n  const {\n    0: comments,\n    1: setComments\n  } = useState('');\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const dispatch = useDispatch();\n  const {\n    imagePaths,\n    isAddingPost,\n    postAdded,\n    mainPosts,\n    GroupPosts,\n    commentAdded,\n    isAddingComment\n  } = useSelector(state => state.post); // 댓글\n\n  const onChangeComment = useCallback(e => {\n    setComments(e.target.value);\n  }, []); //댓글창토글\n\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []); // 댓글올리기 사이클\n\n  const onSubmitComment = useCallback(e => {\n    e.preventDefault();\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        text\n      }\n    });\n  }, []);\n  useEffect(() => {\n    setComments('');\n  }, [commentAdded === true]);\n  useEffect(() => {\n    return __jsx(\"div\", {\n      className: \"letsbegin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"startT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\\uADF8\\uB8F9\\uC5D0 \\uC7AC\\uBBF8\\uC788\\uB294 \\uC774\\uC57C\\uAE30\\uB97C \\uC368\\uBCF4\\uC138\\uC694.\"));\n  }, []); // if(postAdded===false)\n  // return(\n  //     <div className=\"letsbegin\" >\n  //         <div className=\"startT\">그룹에 재미있는 이야기를 써보세요.</div>\n  //     </div>\n  // );\n  // if(postAdded===true)\n\n  return __jsx(\"div\", {\n    className: \"letsbegin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"postbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"contBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, imagePaths.map(c => __jsx(\"div\", {\n    key: c,\n    style: {\n      display: \"inline-block\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"http://localhost:3065/\".concat(c),\n    style: {\n      width: '200px'\n    },\n    alt: c,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"\\uC81C\\uAC70\"))))), __jsx(\"div\", {\n    className: \"btnsbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"commentBtn\",\n    value: commentFormOpened,\n    onClick: onToggleComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"button\",\n    className: \"likeBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"button\",\n    className: \"removeBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), commentFormOpened === true && __jsx(\"form\", {\n    className: \"commentbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(\"textarea\", {\n    className: \"comment\",\n    value: comments,\n    onChange: onChangeComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"combtn\",\n    onClick: onSubmitComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"COMMENT\")), commentFormOpened === true && mainPosts.map(c => __jsx(\"div\", {\n    key: c,\n    style: {\n      display: \"inline-block\",\n      width: \"100%\",\n      height: \"100px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"comline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"\\uB313\\uAE00\", __jsx(\"button\", {\n    type: \"button\",\n    className: \"remove\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"REMOVE\")))))));\n});\nexport default ContentForm;","map":{"version":3,"sources":["C:/Users/이귀영/Documents/coporate/weave/src/ch1/front/components/ContentForm.js"],"names":["React","useCallback","useState","useEffect","memo","useSelector","useDispatch","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","Link","ContentForm","comments","setComments","text","setText","commentFormOpened","setCommentFormOpened","dispatch","imagePaths","isAddingPost","postAdded","mainPosts","GroupPosts","commentAdded","isAddingComment","state","post","onChangeComment","e","target","value","onToggleComment","prev","onSubmitComment","preventDefault","type","data","map","c","display","width","height"],"mappings":"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","sourcesContent":["// mode변경 test\r\nimport React, { useCallback, useState, useEffect, memo }  from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\nimport '../components/Contents.css';\r\nimport Link from 'next/link';\r\nimport '../components/reset.css';\r\n\r\nconst ContentForm = memo(() => {\r\n    \r\n    const [comments, setComments ] = useState('');\r\n    const [text, setText ] = useState('');\r\n    const [ commentFormOpened, setCommentFormOpened] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { imagePaths, isAddingPost, postAdded, mainPosts, GroupPosts, commentAdded, isAddingComment } = useSelector(state => state.post);\r\n\r\n    // 댓글\r\n    const onChangeComment = useCallback((e) => {\r\n        setComments(e.target.value);\r\n    }, []);\r\n\r\n    //댓글창토글\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened(prev => !prev);\r\n      }, []);\r\n\r\n    // 댓글올리기 사이클\r\n    const onSubmitComment = useCallback((e) => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type: ADD_COMMENT_REQUEST,\r\n            data: {\r\n                text,\r\n            },\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setComments('');\r\n    },[commentAdded === true]);\r\n\r\n    useEffect(() => {\r\n        return(\r\n            <div className=\"letsbegin\" >\r\n                <div className=\"startT\">그룹에 재미있는 이야기를 써보세요.</div>\r\n            </div>\r\n        );    \r\n    },[]);\r\n\r\n    // if(postAdded===false)\r\n    // return(\r\n    //     <div className=\"letsbegin\" >\r\n    //         <div className=\"startT\">그룹에 재미있는 이야기를 써보세요.</div>\r\n    //     </div>\r\n    // );\r\n    // if(postAdded===true)\r\n    return(\r\n        <div className=\"letsbegin\" >\r\n            {/* 게시물올라갈부분 */}\r\n           \r\n                \r\n                    <div className=\"postbox\">\r\n                        <div className=\"contBox\">\r\n                            {/* <img alt=\"example\" src={post.img}/>  */}\r\n                            {imagePaths.map((c) => (\r\n                                <div key={c} style={{display:\"inline-block\"}}>\r\n                                    <img src={`http://localhost:3065/${c}`} style={{ width:'200px'}} alt={c}></img> \r\n                                    <div>\r\n                                        <button>제거</button>\r\n                                    </div>   \r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"btnsbox\">\r\n                            <button type=\"button\" className=\"commentBtn\"  value={commentFormOpened} onClick={onToggleComment} />\r\n                            <button type=\"button\" className=\"likeBtn\" /> \r\n                            <button type=\"button\" className=\"removeBtn\" />\r\n                            {commentFormOpened===true&&\r\n                                <form className=\"commentbox\">\r\n                                    <textarea className=\"comment\" value={comments} onChange={onChangeComment} />\r\n                                    <button type=\"submit\" className=\"combtn\" onClick={onSubmitComment}>COMMENT</button>\r\n                                </form>\r\n                            }\r\n                            {/* 댓글올라갈부분 */}\r\n                            {commentFormOpened===true&& mainPosts.map((c) => (\r\n                                <div key={c} style={{display:\"inline-block\",width:\"100%\",height:\"100px\"}}>\r\n                                    <div className=\"comline\">\r\n                                        댓글\r\n                                        <button type=\"button\" className=\"remove\">REMOVE</button>\r\n                                    </div>   \r\n                                </div>\r\n                            ))}\r\n                        </div> \r\n                    </div>\r\n        </div>\r\n    );\r\n    \r\n\r\n});\r\nexport default ContentForm;\r\n    \r\n        \r\n        \r\n        "]},"metadata":{},"sourceType":"module"}