{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uADC0\\uC601\\\\Documents\\\\coporate\\\\weave\\\\src\\\\ch1\\\\front\\\\components\\\\File.js\";\nvar __jsx = React.createElement;\n//import React from 'react';\nimport React, { useCallback, useState, useEffect } from 'react'; //import { useSelector, useDispatch } from 'react-redux';\n//import axios from 'axios';\n\nimport './Templete.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_GROUP_REQUEST } from '../reducers/post';\n\nconst File = () => {\n  const dispatch = useDispatch();\n  const {\n    0: text,\n    1: setText\n  } = useState(''); //const [file, setFile ] = useState(null);\n  //const [selctedFile, setSelctedFile ] = useState(null);\n\n  const {\n    addingGroupPost,\n    addedGroupPost\n  } = useSelector(state => state.post); //text 초기값\n\n  const {\n    0: grouptit,\n    1: setGrouptit\n  } = useState('');\n  const {\n    0: grouptext,\n    1: setGrouptext\n  } = useState('');\n\n  const InputChangeTit = e => {\n    e.preventDefault();\n    console.log(target.value);\n    setGrouptit(target.value);\n  };\n\n  const InputChangeText = e => {\n    setGrouptext(e.target.value);\n  }; //단일 이미지 미리보기\n\n\n  const {\n    0: img,\n    1: setImg\n  } = useState(null);\n  const onChangeImage = useCallback(e => {\n    var reader = new FileReader();\n    reader.readAsDataURL(e.target.files[0]);\n\n    reader.onloadend = function () {\n      setImg(reader.result);\n    };\n  }, []); // 취소버튼클릭시 파일창닫기\n\n  const popBlockClose = e => {\n    e.preventDefault();\n    let pop = document.querySelector(\".pop\");\n    let block = document.querySelector(\".block\");\n    pop.style.display = \"none\";\n    block.style.display = \"none\";\n    setGrouptit('');\n    setGrouptext('');\n    setImg(null);\n  }; // 그룹만들기서브밋\n\n\n  const onSubmitGroup = useCallback(e => {\n    e.preventDefault();\n    dispatch({\n      type: ADD_GROUP_REQUEST,\n      data: {\n        text,\n        img\n      }\n    });\n  }, []);\n  useEffect(() => {\n    setText('');\n  }, [addedGroupPost === true]);\n  return __jsx(\"form\", {\n    className: \"pop\",\n    onSubmit: onSubmitGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"gimg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"filebox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"\\uC0AC\\uC9C4\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"), __jsx(\"input\", {\n    type: \"file\",\n    id: \"file\",\n    onChange: onChangeImage,\n    accept: \".jpg, .jpeg, .png\",\n    className: \"upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"name\",\n    className: \"gtit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \" \\uADF8\\uB8F9\\uC774\\uB984\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"gname\",\n    className: \"gname\",\n    value: grouptit,\n    onChange: InputChangeTit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"name\",\n    className: \"gtit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \" \\uADF8\\uB8F9\\uC18C\\uAC1C\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"gintro\",\n    className: \"gintro\",\n    value: grouptext,\n    onChange: InputChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    className: \"send\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"submit\",\n    value: \"\\uC62C\\uB9AC\\uAE30\",\n    loading: addingGroupPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"button\",\n    value: \"\\uCDE8\\uC18C\",\n    onClick: popBlockClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }))));\n};\n\nexport default File; // const handleChange = (event) => {\n//   //console.log(event.target);\n//   setFile({\n//     file: URL.createObjectURL(event.target.files[0])\n//   });\n// };\n// const fileUpSelcetedHandler = (event) => {\n//   //console.log(event.target.file);\n//   setSelctedFile({\n//     selctedFile:event.target.file[0]\n//   })\n// };\n// const fileUploadHandler = () => {\n//     axios.post('');\n// };\n// class File extends React.Component{\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       file: null\n//     }\n//     this.handleChange = this.handleChange.bind(this)\n//   }\n//   handleChange(event) {\n//     this.setState({\n//       file: URL.createObjectURL(event.target.files[0])\n//     })\n//   }\n//   state={\n//     selctedFile:null\n//   }\n//   fileUpSelcetedHandler=event=>{\n//     //console.log(event.target.file);\n//     this.setState({\n//       selctedFile:event.target.file[0]\n//     })\n//   }\n//   fileUploadHandler=()=>{\n//     axios.post('');\n//   }\n//   render(){\n//     return(\n//       <form className=\"pop\" onSubmit={onSubmitGroup}>\n//           <div className=\"gimg\">\n//             <img src={this.state.file}/>\n//           </div>\n//           {/* <input type=\"image\" alt=\"submit\"></input> */}\n//           <div className=\"filebox\">\n//             <label htmlFor =\"file\">사진을 선택해주세요.</label>\n//             <input type=\"file\" id=\"file\" name=\"file\" size=\"2000\" \n//                    accept=\".jpg, .jpeg, .png\" className=\"upload\"\n//                    onChange={this.handleChange} />\n//           </div>\n//           <div className=\"group\">\n//             <label htmlFor =\"name\" className=\"gtit\"> 그룹이름</label>\n//             <input type=\"text\" name=\"gname\" className=\"gname\" />\n//             <label htmlFor =\"name\" className=\"gtit\"> 그룹소개</label>\n//             <input type=\"text\" name=\"gintro\" className=\"gintro\" />\n//             <p className=\"send\">\n//               <input type=\"submit\" value=\"올리기\"\n//                      onClick={this.fileUploadHandler}\n//               />\n//               <input type=\"reset\" value=\"취소\" onClick={function(){\n//                 var pop = document.querySelector(\".pop\")\n//                 var block = document.querySelector(\".block\")\n//                 pop.style.display=\"none\"\n//                 block.style.display=\"none\"\n//               }} />\n//             </p>\n//             {this.props.children}\n//           </div>\n//         </form>\n//     );\n//   }\n// }\n//   export default File;","map":{"version":3,"sources":["C:/Users/이귀영/Documents/coporate/weave/src/ch1/front/components/File.js"],"names":["React","useCallback","useState","useEffect","useSelector","useDispatch","ADD_GROUP_REQUEST","File","dispatch","text","setText","addingGroupPost","addedGroupPost","state","post","grouptit","setGrouptit","grouptext","setGrouptext","InputChangeTit","e","preventDefault","console","log","target","value","InputChangeText","img","setImg","onChangeImage","reader","FileReader","readAsDataURL","files","onloadend","result","popBlockClose","pop","document","querySelector","block","style","display","onSubmitGroup","type","data"],"mappings":"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","sourcesContent":["//import React from 'react';\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\n//import { useSelector, useDispatch } from 'react-redux';\r\n//import axios from 'axios';\r\nimport './Templete.css';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {  ADD_GROUP_REQUEST } from '../reducers/post';\r\n\r\n\r\nconst File = () => {\r\n    const dispatch = useDispatch();\r\n    const [text, setText ] = useState('');\r\n    //const [file, setFile ] = useState(null);\r\n    //const [selctedFile, setSelctedFile ] = useState(null);\r\n    const { addingGroupPost, addedGroupPost } = useSelector(state => state.post);\r\n    \r\n    //text 초기값\r\n    const [grouptit, setGrouptit] = useState('');\r\n    const [grouptext, setGrouptext] = useState('');\r\n\r\n    const InputChangeTit = (e) => {\r\n      e.preventDefault();\r\n      console.log(target.value);\r\n      setGrouptit(target.value);\r\n    };\r\n    const InputChangeText = (e) => {\r\n      setGrouptext(e.target.value);\r\n    };\r\n\r\n    //단일 이미지 미리보기\r\n    const [img, setImg] = useState(null);\r\n    const onChangeImage = useCallback((e)=>{\r\n        var reader = new FileReader();\r\n        reader.readAsDataURL(e.target.files[0]);\r\n        reader.onloadend = function () {\r\n            setImg(reader.result)\r\n          }\r\n    },[])\r\n\r\n    // 취소버튼클릭시 파일창닫기\r\n    const popBlockClose = (e) => {\r\n      e.preventDefault();\r\n      let pop = document.querySelector(\".pop\")\r\n      let block = document.querySelector(\".block\")\r\n      pop.style.display=\"none\"\r\n      block.style.display=\"none\"\r\n      setGrouptit('');\r\n      setGrouptext('');\r\n      setImg(null);\r\n    };\r\n    \r\n    // 그룹만들기서브밋\r\n    const onSubmitGroup = useCallback((e) => {\r\n      e.preventDefault();\r\n      dispatch({\r\n          type: ADD_GROUP_REQUEST,\r\n          data: {\r\n              text,\r\n              img,\r\n          },\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setText('');\r\n  },[addedGroupPost === true]);\r\n \r\n\r\n    return (\r\n      <form className=\"pop\" onSubmit={onSubmitGroup}>\r\n        <div className=\"gimg\">\r\n          <img src={img} ></img>\r\n        </div>\r\n        \r\n        <div className=\"filebox\">\r\n          <label htmlFor =\"file\" >사진을 선택해주세요.</label>\r\n          <input type = \"file\" id=\"file\" onChange={onChangeImage} \r\n                 accept=\".jpg, .jpeg, .png\" className=\"upload\" /> \r\n        </div>\r\n        \r\n        <div className=\"group\">\r\n          <label htmlFor =\"name\" className=\"gtit\"> 그룹이름</label>\r\n          <input type=\"text\" name=\"gname\" className=\"gname\" value={grouptit} onChange={InputChangeTit} />\r\n          <label htmlFor =\"name\" className=\"gtit\"> 그룹소개</label>\r\n          <input type=\"text\" name=\"gintro\" className=\"gintro\" value={grouptext} onChange={InputChangeText} />\r\n          <p className=\"send\">\r\n            <input type=\"submit\" value=\"올리기\" loading={addingGroupPost} />\r\n            <input type=\"button\" value=\"취소\" onClick={popBlockClose} />\r\n          </p>\r\n        </div>\r\n      </form>\r\n    );\r\n};\r\nexport default File;\r\n\r\n// const handleChange = (event) => {\r\n//   //console.log(event.target);\r\n//   setFile({\r\n//     file: URL.createObjectURL(event.target.files[0])\r\n//   });\r\n// };\r\n\r\n// const fileUpSelcetedHandler = (event) => {\r\n//   //console.log(event.target.file);\r\n//   setSelctedFile({\r\n//     selctedFile:event.target.file[0]\r\n//   })\r\n// };\r\n  \r\n// const fileUploadHandler = () => {\r\n//     axios.post('');\r\n// };\r\n\r\n\r\n// class File extends React.Component{\r\n//   constructor(props){\r\n//     super(props);\r\n//     this.state = {\r\n//       file: null\r\n//     }\r\n//     this.handleChange = this.handleChange.bind(this)\r\n//   }\r\n//   handleChange(event) {\r\n//     this.setState({\r\n//       file: URL.createObjectURL(event.target.files[0])\r\n//     })\r\n//   }\r\n//   state={\r\n//     selctedFile:null\r\n//   }\r\n//   fileUpSelcetedHandler=event=>{\r\n//     //console.log(event.target.file);\r\n//     this.setState({\r\n//       selctedFile:event.target.file[0]\r\n//     })\r\n//   }\r\n\r\n//   fileUploadHandler=()=>{\r\n//     axios.post('');\r\n//   }\r\n\r\n\r\n//   render(){\r\n//     return(\r\n//       <form className=\"pop\" onSubmit={onSubmitGroup}>\r\n//           <div className=\"gimg\">\r\n//             <img src={this.state.file}/>\r\n//           </div>\r\n//           {/* <input type=\"image\" alt=\"submit\"></input> */}\r\n//           <div className=\"filebox\">\r\n//             <label htmlFor =\"file\">사진을 선택해주세요.</label>\r\n//             <input type=\"file\" id=\"file\" name=\"file\" size=\"2000\" \r\n//                    accept=\".jpg, .jpeg, .png\" className=\"upload\"\r\n//                    onChange={this.handleChange} />\r\n//           </div>\r\n//           <div className=\"group\">\r\n//             <label htmlFor =\"name\" className=\"gtit\"> 그룹이름</label>\r\n//             <input type=\"text\" name=\"gname\" className=\"gname\" />\r\n//             <label htmlFor =\"name\" className=\"gtit\"> 그룹소개</label>\r\n//             <input type=\"text\" name=\"gintro\" className=\"gintro\" />\r\n//             <p className=\"send\">\r\n//               <input type=\"submit\" value=\"올리기\"\r\n//                      onClick={this.fileUploadHandler}\r\n//               />\r\n//               <input type=\"reset\" value=\"취소\" onClick={function(){\r\n//                 var pop = document.querySelector(\".pop\")\r\n//                 var block = document.querySelector(\".block\")\r\n//                 pop.style.display=\"none\"\r\n//                 block.style.display=\"none\"\r\n//               }} />\r\n//             </p>\r\n//             {this.props.children}\r\n//           </div>\r\n//         </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\n//   export default File;\r\n\r\n"]},"metadata":{},"sourceType":"module"}