{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uADC0\\uC601\\\\Documents\\\\coporate\\\\weave\\\\src\\\\ch1\\\\front\\\\components\\\\Header.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, Component } from 'react';\nimport Link from 'next/link';\nimport { useSelector } from 'react-redux';\nimport Home from './Home';\nimport './Header.css';\nimport { render } from 'react-dom';\n\nconst Header = () => {\n  const {\n    isLoggedOut\n  } = useSelector(state => state.user);\n  const {\n    0: clickBtn,\n    1: setClickBtn\n  } = useState({\n    isToggleOn: false\n  });\n\n  const handleClick = e => {\n    e.preventDefault();\n    setClickBtn({\n      isToggleOn: !e.target.isToggleOn\n    });\n  };\n\n  const logout = () => {\n    alert('로그아웃 하시겠습니까?'); //     useEffect((me) => {\n    //       if(me){\n    //         alert('로그인했으니 메인페이지로 이동합니다.');\n    //         Router.push(\"/indexpage\");\n    //     }\n    // }, [me && me.id]);(isLoggedOut);\n  }; //프로필창클릭시 내려오는 박스\n\n\n  const Toggle = e => {\n    return __jsx(\"div\", {\n      className: \"toggleBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/mygroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"\\uB0B4 \\uADF8\\uB8F9\"))), __jsx(\"li\", {\n      onClick: logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"\\uB85C\\uADF8\\uC544\\uC6C3\")));\n  };\n\n  return __jsx(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"logo_w\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"bld\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"\\uB85C\\uACE0\")))), __jsx(\"div\", {\n    className: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    htmltype: \"button\",\n    className: \"pfBtn\",\n    value: clickBtn,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, clickBtn.isToggleOn && __jsx(Toggle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"srcbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"\\uAC80\\uC0C9\\uD574\\uBCF4\\uC138\\uC694.\",\n    className: \"txtbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })));\n};\n\nexport default Header; // export default class Toggle extends Component{\n//   state = {\n//     on : false,\n//   }\n// }\n// toggle=()=>{\n//   this.ListeningStateChangedEvent({\n//     on: !this.state.on\n//   })\n// }\n// render(){\n//   return(\n//     <div>\n//       {this. state.on&& <Toggle /> }\n//       <button onClick={this.toggle}>토글버튼</button>\n//     </div>\n//   )\n// }","map":{"version":3,"sources":["C:/Users/이귀영/Documents/coporate/weave/src/ch1/front/components/Header.js"],"names":["React","useState","useEffect","Component","Link","useSelector","Home","render","Header","isLoggedOut","state","user","clickBtn","setClickBtn","isToggleOn","handleClick","e","preventDefault","target","logout","alert","Toggle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\r\nimport Link from 'next/link';\r\nimport { useSelector } from 'react-redux';\r\nimport Home from './Home';\r\nimport './Header.css';\r\nimport { render } from 'react-dom';\r\n\r\n\r\n\r\nconst Header = () => {\r\n\r\n  const { isLoggedOut } = useSelector(state => state.user);\r\n  const [clickBtn, setClickBtn] = useState({isToggleOn: false});\r\n  \r\n  const handleClick =(e)=>{\r\n    e.preventDefault();\r\n    setClickBtn({isToggleOn: !e.target.isToggleOn});\r\n  };\r\n\r\n  const logout = () => {\r\n    alert('로그아웃 하시겠습니까?');\r\n//     useEffect((me) => {\r\n//       if(me){\r\n//         alert('로그인했으니 메인페이지로 이동합니다.');\r\n//         Router.push(\"/indexpage\");\r\n//     }\r\n// }, [me && me.id]);(isLoggedOut);\r\n  };\r\n  //프로필창클릭시 내려오는 박스\r\n  const Toggle = (e) => { \r\n    return(\r\n        <div className=\"toggleBox\">\r\n          <ul>\r\n            <li><Link href=\"/mygroup\"><a>내 그룹</a></Link></li>\r\n            <li onClick={logout}>로그아웃</li>\r\n          </ul>\r\n        </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n      <div className=\"header\">\r\n        <div className=\"logo_w\">\r\n          <Link href=\"/\"><a><span className=\"bld\">로고</span></a></Link>\r\n        </div>\r\n          \r\n        <div className=\"profile\">\r\n          {/* 프로필이미지 */}\r\n          {/* 더보기란 */}\r\n          <button htmltype=\"button\" className=\"pfBtn\" value={clickBtn} onClick={handleClick} >\r\n            { clickBtn.isToggleOn && <Toggle /> }\r\n          </button>\r\n          \r\n        </div>\r\n        \r\n        <div className=\"srcbox\">\r\n            <input type=\"text\" placeholder=\"검색해보세요.\" className=\"txtbox\" />  \r\n            <input type=\"submit\" value=\"Search\" className=\"search\" />\r\n        </div>\r\n\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default class Toggle extends Component{\r\n//   state = {\r\n//     on : false,\r\n//   }\r\n// }\r\n\r\n// toggle=()=>{\r\n//   this.ListeningStateChangedEvent({\r\n//     on: !this.state.on\r\n//   })\r\n// }\r\n\r\n// render(){\r\n//   return(\r\n//     <div>\r\n//       {this. state.on&& <Toggle /> }\r\n//       <button onClick={this.toggle}>토글버튼</button>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n"]},"metadata":{},"sourceType":"module"}