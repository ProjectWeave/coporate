{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uADC0\\uC601\\\\Documents\\\\coporate\\\\weave\\\\src\\\\ch1\\\\front\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withRedux from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\nimport AppLayout from '../components/AppLayout';\nimport { LOG_IN_SUCCESS } from '../reducers/user';\nimport Home from '../components/Home';\n\nconst Weave = ({\n  Component,\n  store\n}) => {\n  // if(LOG_IN_SUCCESS)\n  return __jsx(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(Component, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })));\n};\n\nWeave.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  store: PropTypes.object.isRequired\n};\n\nconst configureStore = (initialState, options) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = process.env.NODE_ENV === 'production' ? compose(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares), !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f);\n  const store = createStore(reducer, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(Weave);","map":{"version":3,"sources":["C:/Users/이귀영/Documents/coporate/weave/src/ch1/front/pages/_app.js"],"names":["React","PropTypes","withRedux","applyMiddleware","compose","createStore","Provider","createSagaMiddleware","reducer","rootSaga","AppLayout","LOG_IN_SUCCESS","Home","Weave","Component","store","propTypes","elementType","isRequired","object","configureStore","initialState","options","sagaMiddleware","middlewares","enhancer","process","env","NODE_ENV","isServer","window","__REDUX_DEVTOOLS_EXTENSION__","f","run"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AAClC;AACA,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADR,CADJ;AAOH,CATD;;AAYAF,KAAK,CAACG,SAAN,GAAgB;AACZF,EAAAA,SAAS,EAAEb,SAAS,CAACgB,WAAV,CAAsBC,UADrB;AAEZH,EAAAA,KAAK,EAAGd,SAAS,CAACkB,MAAV,CAAiBD;AAFb,CAAhB;;AAKA,MAAME,cAAc,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAC9C,QAAMC,cAAc,GAAGhB,oBAAoB,EAA3C;AACA,QAAMiB,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,QAAME,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACbxB,OAAO,CAACD,eAAe,CAAC,GAAGqB,WAAJ,CAAhB,CADM,GAEbpB,OAAO,CACPD,eAAe,CAAC,GAAGqB,WAAJ,CADR,EAEP,CAACF,OAAO,CAACO,QAAT,IAAqB,OAAOC,MAAM,CAACC,4BAAd,KAA+C,WAApE,GAAkFD,MAAM,CAACC,4BAAP,EAAlF,GAA0HC,CAAC,IAAIA,CAFxH,CAFX;AAMA,QAAMjB,KAAK,GAAGV,WAAW,CAACG,OAAD,EAAUa,YAAV,EAAwBI,QAAxB,CAAzB;AACAF,EAAAA,cAAc,CAACU,GAAf,CAAmBxB,QAAnB;AACA,SAAOM,KAAP;AACD,CAZH;;AAcE,eAAeb,SAAS,CAACkB,cAAD,CAAT,CAA0BP,KAA1B,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport withRedux from 'next-redux-wrapper';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducer from '../reducers';\r\nimport rootSaga from '../sagas';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\nimport { LOG_IN_SUCCESS } from '../reducers/user';\r\nimport Home from '../components/Home';\r\n\r\n\r\nconst Weave = ({Component, store}) => {\r\n    // if(LOG_IN_SUCCESS)\r\n    return (\r\n        <Provider store={store}>\r\n                <AppLayout>\r\n                    <Component />\r\n                </AppLayout>\r\n        </Provider>\r\n    );\r\n};\r\n\r\n\r\nWeave.propTypes={\r\n    Component: PropTypes.elementType.isRequired,\r\n    store : PropTypes.object.isRequired,\r\n};\r\n\r\nconst configureStore = (initialState, options) => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [sagaMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n      ? compose(applyMiddleware(...middlewares))\r\n      : compose(\r\n        applyMiddleware(...middlewares),\r\n        !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\r\n      );\r\n    const store = createStore(reducer, initialState, enhancer);\r\n    sagaMiddleware.run(rootSaga);\r\n    return store;\r\n  };\r\n  \r\n  export default withRedux(configureStore)(Weave);"]},"metadata":{},"sourceType":"module"}