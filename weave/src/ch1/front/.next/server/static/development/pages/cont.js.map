{"version":3,"file":"static\\development\\pages\\cont.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/ContentForm.js","webpack:///./components/GroupBox.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-properties.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptors.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./pages/cont.js","webpack:///./reducers/post.js","webpack:///external \"core-js/library/fn/object/define-properties\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptors\"","webpack:///external \"core-js/library/fn/object/get-own-property-symbols\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-redux\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import React, { useCallback, useState, useEffect }  from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\nimport '../components/Contents.css';\r\nimport '../components/reset.css';\r\n\r\nconst ContentForm = ({post}) => {\r\n\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    const [commentText, setCommentText ] = useState('');\r\n    \r\n    const { me } = useSelector(state => state.user);\r\n    const { commentAdded, isAddingComment,CommentPosts } = useSelector(state => state.post);\r\n    const dispatch = useDispatch();\r\n\r\n   \r\n    //댓글창토글\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened(prev => !prev);\r\n      }, []);\r\n\r\n    // 댓글\r\n    const onChangeComment = useCallback((e) => {\r\n        setCommentText(e.target.value);\r\n    }, []);\r\n\r\n    // 댓글올리기 사이클\r\n    const onSubmitComment = useCallback((e) => {\r\n        e.preventDefault();\r\n        if(!me){\r\n            return alert('로그인이 필요합니다.');\r\n        }\r\n        return dispatch({\r\n            type: ADD_COMMENT_REQUEST,\r\n            data:{\r\n                postId: post.id,\r\n                content: commentText,\r\n            },\r\n        });\r\n    }, [me && me.id, commentText]);\r\n    \r\n    // 댓글 성공시, 빈텍스트로 \r\n    useEffect(() => {\r\n        setCommentText('');\r\n    },[commentAdded === true]);\r\n\r\n    // 댓글삭제하기\r\n    const onRemoveComments = () => {\r\n        alert('댓글을 삭제하시겠습니까?');\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <div className=\"postbox\">   \r\n                <div className=\"contBox\">\r\n                    <p>{post.User.nickname} 님의 게시물</p>\r\n                    <img style={{display:\"block\", margin:\"0 auto\", height:\"200px\"}} alt=\"example\" src={post.img}/> \r\n                    <div>{post.content}</div>\r\n                </div>\r\n                <div className=\"btnsbox\">\r\n                    <button type=\"button\" className=\"commentBtn\"  value={commentFormOpened} onClick={onToggleComment} />\r\n                    <button type=\"button\" className=\"likeBtn\" /> \r\n                    <button type=\"button\" className=\"removeBtn\" />\r\n                    {commentFormOpened===true &&\r\n                        <form className=\"commentbox\" onSubmit={onSubmitComment}>\r\n                            <textarea className=\"comment\" value={commentText} onChange={onChangeComment} />\r\n                            <button type=\"primary\" htmlType=\"submit\" className=\"combtn\" loading={isAddingComment} >COMMENT</button>\r\n                        </form>\r\n                    }\r\n                    {/* 댓글올라갈부분 */}\r\n                    {commentFormOpened===true && (\r\n                        <div style={{display:\"inline-block\", width:\"100%\"}}>\r\n                            <p style={{marginLeft:\"10px\"}}>{commentAdded ? '댓글' + post.Comments.length : '댓글'+ '0'}</p>\r\n                            <div className=\"comline\"></div>\r\n\r\n                            { CommentPosts.map((v) => {\r\n                                return( \r\n                                    <li key={v.createdAt} style={{\r\n                                        listStyle:\"none\", display:\"inline-block\", clear:\"both\"}}\r\n                                    >\r\n                                        {v.User.nickname} : {v.content}\r\n                                        <button type=\"button\" className=\"remove\" onClick={onRemoveComments} >REMOVE</button>\r\n                                    </li>\r\n                                );\r\n                            })\r\n                            }\r\n                        </div>\r\n                        )\r\n                    }\r\n                </div> \r\n            </div>\r\n        </>\r\n    );\r\n    \r\n\r\n};\r\n\r\nContentForm.propTypes={\r\n    post: PropTypes.shape({\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        img: PropTypes.string,\r\n    }),\r\n};\r\n\r\n\r\nexport default ContentForm;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport './GroupItem.css'\r\n\r\n\r\nconst GroupBox = () => {\r\n\r\n    const {grouptit, grouptext } = useSelector(state=>state.user);\r\n\r\n    return (\r\n        <div className=\"groupinfo\">\r\n                <div className=\"groupimg\"></div>\r\n                <div className=\"grouptext\">\r\n                    <h1> {grouptit} </h1>\r\n                    <p className=\"numMem\">Member. 43</p>\r\n                    <p> {grouptext} </p>\r\n                    <nav className=\"groupSubmitBtn\">\r\n                        <button className=\"gjoin\">가입하기</button>\r\n                        <button className=\"gout\">그룹탈퇴</button>\r\n                    </nav>\r\n                </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// GroupBox.propTypes={\r\n//     post: PropTypes.shape({\r\n//         User: PropTypes.object,\r\n//         content: PropTypes.string,\r\n//         img: PropTypes.string,\r\n//     }),\r\n// };\r\n\r\n\r\nexport default GroupBox;","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","// mode변경 test\r\nimport React, { useCallback, useState, useEffect }  from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_POST_REQUEST,LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\r\n\r\nimport ContentForm from '../components/ContentForm';\r\nimport GroupBox from '../components/GroupBox';\r\n\r\nimport '../components/Contents.css';\r\nimport '../components/Menu.css';\r\nimport '../components/reset.css';\r\n\r\nconst Cont = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [text, setText ] = useState('');\r\n    const { isAddingPost, postAdded, mainPosts } = useSelector(state => state.post);\r\n\r\n    // 메뉴클릭시 컨텐츠 변경\r\n    const [ Mode, setMode ] = useState('read');\r\n\r\n    // 게시물 로드하기\r\n    useEffect(() => {\r\n        dispatch({\r\n          type: LOAD_MAIN_POSTS_REQUEST,\r\n        });\r\n      }, []);\r\n\r\n    const handleChangePage = (e) => {\r\n        e.preventDefault();\r\n        setMode('member');\r\n        let classa = document.querySelector(\".menu_a\")\r\n        let classm = document.querySelector(\".menu_m\")\r\n        classa.setAttribute(\"id\",\"\");\r\n        classm.setAttribute(\"id\",\"on\");\r\n    };\r\n    const handleChangePage2 = (e) => {\r\n        e.preventDefault();\r\n        setMode('read');\r\n        let classa = document.querySelector(\".menu_a\")\r\n        let classm = document.querySelector(\".menu_m\")\r\n        classa.setAttribute(\"id\",\"on\");\r\n        classm.setAttribute(\"id\",\"\");\r\n    };\r\n\r\n    \r\n    useEffect(() => {\r\n        setText('');\r\n    },[postAdded === true]);\r\n\r\n    const onSubmitForm = useCallback((e) => {\r\n        e.preventDefault();\r\n        // 빈텍스트, 스페이스바 게시물올리기 막기\r\n        if(!text || !text.trim()){\r\n            return alert('게시글을 작성하세요.');\r\n        }\r\n        dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: {\r\n                content: text,\r\n            },  \r\n        });\r\n    }, [text]);\r\n    \r\n    \r\n    // 단일이미지 미리보기\r\n    const [img, setImg] = useState(null);\r\n    const onChangeImage = useCallback((e)=>{\r\n        console.log('파일창열리니?');\r\n        var reader = new FileReader();\r\n        reader.readAsDataURL(e.target.files[0]);\r\n        reader.onloadend = function () {\r\n            setImg(reader.result);\r\n          }\r\n    },[]);\r\n\r\n    // 소식을 남겨주세요부분 텍스트입력\r\n    const onChangeText = useCallback((e) => {\r\n        setText(e.target.value);\r\n    }, []);\r\n\r\n    if(Mode==='member'){\r\n        return(\r\n        <>\r\n         <div className=\"top\">\r\n                <ul className=\"menubox\">\r\n                    <li className=\"menu_a\" id=\"on\" onClick={handleChangePage2}>전체글</li>\r\n                    <li className=\"menu_m\"  onClick={handleChangePage}>멤버</li>\r\n                </ul>           \r\n            </div>\r\n            <div className=\"wrap\">\r\n                {/* <div className=\"groupinfo\">\r\n                    <div className=\"groupimg\"></div>\r\n                    <div className=\"grouptext\">\r\n                        <h1>댕댕이집사 그룹</h1>\r\n                        <p className=\"numMem\">Member. 43</p>\r\n                        <p>세젤예 댕댕이들 모여라~!</p>\r\n                        <nav className=\"groupSubmitBtn\">\r\n                            <button className=\"gjoin\">가입하기</button>\r\n                            <button className=\"gout\">그룹탈퇴</button>\r\n                        </nav>\r\n                    </div>\r\n                </div> */}\r\n                <GroupBox />\r\n               \r\n                <div className=\"memberbox\">\r\n                    멤버목록\r\n                </div>\r\n            </div>\r\n        </>\r\n        );\r\n      };\r\n\r\n    if(Mode==='read')\r\n    return (\r\n        <>\r\n            <div className=\"top\">\r\n                <ul className=\"menubox\">\r\n                    <li className=\"menu_a\" id=\"on\" onClick={handleChangePage2}>전체글</li>\r\n                    <li className=\"menu_m\"  onClick={handleChangePage}>멤버</li>\r\n                </ul>           \r\n            </div>\r\n            <div className=\"wrap\">\r\n                <GroupBox />\r\n                \r\n                <form className=\"uploadTb\" encType=\"multipart/form-data\" onSubmit={onSubmitForm}>\r\n                    <div className='row1'>\r\n                        <img src={img} style={{ width: '50%' }} />\r\n                        <textarea maxLength={1500} placeholder=\"소식을 남겨주세요\"\r\n                                  className=\"tarea\" value={text} onChange={onChangeText} >\r\n                                       \r\n                        </textarea>\r\n                    </div>\r\n                    <div className='row2'>\r\n                        <div class=\"fileBox\" >\r\n                            <label for=\"uploadBtn_0\" className=\"btn_file\" > </label>\r\n                            <input type=\"file\" id=\"uploadBtn_0\" className=\"uploadBtn\" \r\n                                onChange={onChangeImage} accept=\".jpg, .jpeg, .png\" />\r\n                        </div>\r\n                        <div class=\"fileBox\" >\r\n                            <label for=\"uploadBtn_1\" className=\"btn_file\" > </label>\r\n                            <input type=\"file\" id=\"uploadBtn_1\" className=\"uploadBtn\" \r\n                                onChange={onChangeImage} accept=\".mp4, .wmv, .avi\"  />\r\n                        </div>\r\n                        <div class=\"fileBox\" >\r\n                            <label for=\"uploadBtn_2\" className=\"btn_file\" > </label>\r\n                            <input type=\"file\" id=\"uploadBtn_2\" className=\"uploadBtn\" \r\n                                onChange={onChangeImage} accept=\".txt\" hidden />\r\n                        </div>\r\n                    \r\n                        <div className=\"icon04\">\r\n                            <label for=\"file-input\"></label>\r\n                            <input type=\"submit\" value=\"\" loading={isAddingPost} />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                {/* 게시물올라가는부분 */}\r\n                <div className=\"letsbegin\">\r\n                    <div className=\"startT\">그룹에 재미있는 이야기를 써보세요.</div>\r\n                    <div>\r\n                        {mainPosts.map((i)=>{\r\n                            return(\r\n                                <ContentForm key={i} post={i} />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    {/* 더보기버튼 */}\r\n                    <button className=\"more\">더보기</button>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n           \r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Cont;","export const initialState={\r\n    mainPosts:[{\r\n        id: 1,\r\n        User:{\r\n            id: 1,\r\n            nickname: \"위브\",\r\n        },\r\n        content: \"첫번째 게시글입니다.(메인포스트)\",\r\n        img:\"http://www.9dog.co.kr/wp-content/uploads/2013/07/img-01.jpg\", \r\n        Comments: [],\r\n    }], \r\n    CommentPosts:[{\r\n        id: 1,\r\n        User:{\r\n            id: 1,\r\n            nickname: \"위브\",\r\n        },\r\n        content: \"테스트용.(커멘트포스트)\",\r\n        img:\"http://www.9dog.co.kr/wp-content/uploads/2013/07/img-01.jpg\", \r\n        Comments: [],\r\n    }],\r\n    GroupPosts:[{\r\n        id: 1,\r\n        User:{\r\n            id: 1,\r\n            nickname: \"위브\",\r\n        },\r\n        content: \"두리안그룹(그룹포스트)\",\r\n        img:\"https://img1.daumcdn.net/thumb/R720x0/?fname=http://t1.daumcdn.net/liveboard/dailylife/187ea4bc2ad54b1db5030743265c5397.jpg\", \r\n        gtext: [\"두리안 좋아하는사람들의 모임\"],\r\n    }], // 그룹화면에 보일 포스트들  \r\n    imagePaths:[], //미리보기 이미지경로\r\n    addPostErrorReason: false,  //포스트 업로드 실패사유\r\n    isAddingPost: false,  //포스트 업로드중\r\n    postAdded : false, //포스트 업로드 성공\r\n    isAddingComment: false,\r\n    addCommentErrorReason: '',\r\n    commentAdded: false,\r\n    addingGroupPost: false, // 그룹만들기폴더 업로드중\r\n    GroupErrorReason: '', //그룹만들기업로드 실패사유\r\n    addedGroupPost: false, // 그룹만들기폴더 업로드 성공\r\n\r\n};\r\n\r\nconst dummyPosts = {\r\n    id:2,\r\n    User: {\r\n        id: 1,\r\n        nickname: '위브',\r\n    },\r\n    content: '위브위브위브(더미포스트)',\r\n    img:\"https://img.bemypet.kr/content/2018/10/07172706/puppies-1871260_1920.jpg\", \r\n    Comments: [],\r\n};\r\n\r\nconst dummyComment = {\r\n    id:1,\r\n    User : {\r\n      id:1,\r\n      nickname:\"위브\",\r\n  },\r\n    createdAt: new Date(),\r\n    content: '위브댓글입니다(더미커멘트).',\r\n};\r\n\r\nconst dummyGroupPost = {\r\n    id:1,\r\n    User : {\r\n      id:1,\r\n      nickname:\"위브\",\r\n  },\r\n    createdAt: new Date(),\r\n    content: \"위브글입니다.(더미그룹포스트)\",\r\n};\r\n\r\n\r\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\r\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\r\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\r\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\r\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_GROUP_REQUEST = 'ADD_GROUP_REQUEST';\r\nexport const ADD_GROUP_SUCCESS = 'ADD_GROUP_SUCCESS';\r\nexport const ADD_GROUP_FAILURE = 'ADD_GROUP_FAILURE';\r\n\r\n// const ADD_POST = \"ADD_POST\";\r\n// const ADD_GROUPPOST = \"ADD_GROUPPOST\";\r\n// const ADD_DUMMY = \"ADD_DUMMY\";\r\n\r\n// const addPost={\r\n//     type: ADD_POST,   \r\n// };\r\n// const addGroupPost={\r\n//     type: ADD_GROUPPOST,   \r\n// };\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n        case ADD_POST_REQUEST: {\r\n            return {\r\n                ...state, \r\n                isAddingPost: true,\r\n                addPostErrorReason: '',\r\n                postAdded: false,\r\n            };\r\n        }\r\n        case ADD_POST_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false, \r\n                mainPosts: [action.data, ...state.mainPosts],\r\n                postAdded: true, \r\n            };\r\n        }\r\n        case ADD_POST_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                addPostErrorReason : action.error,\r\n            };\r\n        }\r\n        case ADD_COMMENT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isAddingComment: true,\r\n                addCommentErrorReason: '',\r\n                commentAdded: false,\r\n            };\r\n        }\r\n        case ADD_COMMENT_SUCCESS: { \r\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);//어떤게시물에 댓글을 작성할것인지\r\n            const post = state.mainPosts[postIndex];\r\n            const Comments = [...post.Comments, data.comment];\r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = { ...post, Comments };\r\n            return {\r\n                ...state,\r\n                isAddingComment: false, \r\n                mainPosts,\r\n                commentAdded: true, \r\n            };\r\n        } \r\n        case ADD_COMMENT_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isAddingComment: false,\r\n                addCommentErrorReason : action.error,\r\n            };\r\n        }\r\n        case LOAD_MAIN_POSTS_REQUEST: {\r\n            return {\r\n              ...state,\r\n              mainPosts: [],\r\n            };\r\n          }\r\n          case LOAD_MAIN_POSTS_SUCCESS: {\r\n            return {\r\n              ...state,\r\n              mainPosts: action.data,\r\n            };\r\n          }\r\n          case LOAD_MAIN_POSTS_FAILURE: {\r\n            return {\r\n              ...state,\r\n            };\r\n          }\r\n        //그룹만들기 업로드 \r\n        case ADD_GROUP_REQUEST: {\r\n            return {\r\n                ...state,\r\n                addingGroupPost: true,\r\n                GroupErrorReason : '',\r\n                addedGroupPost: false,\r\n            };\r\n        }\r\n        case ADD_GROUP_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                addingGroupPost: false,\r\n                GroupPosts: [dummyGroupPost, ...state.GroupPosts],\r\n                addedGroupPost: true,\r\n            };\r\n        }\r\n        case ADD_GROUP_FAILURE: {\r\n            return {\r\n                ...state,\r\n                addedGroupPost: false,\r\n                GroupErrorReason : action.error,\r\n            };\r\n        }\r\n        default: {\r\n            return{\r\n                ...state,\r\n            };\r\n        }\r\n    }\r\n};","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5GA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AADA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClLA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AARA;AASA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAzjGA;AAmGA;;;;;;;;;;;;;;;;;;;;;;;AC7OA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}