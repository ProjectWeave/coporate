{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.777aa8a7e8873f1de666.hot-update.js","sources":["webpack:///./sagas/post.js"],"sourcesContent":["import { all, delay, fork, put, takeLatest, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { \r\n    ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, \r\n    ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS,\r\n    ADD_GROUP_REQUEST, ADD_GROUP_SUCCESS, ADD_GROUP_FAILURE,\r\n    LOAD_MAIN_POSTS_FAILURE, LOAD_MAIN_POSTS_REQUEST, LOAD_MAIN_POSTS_SUCCESS \r\n} from '../reducers/post';\r\n\r\n// 게시물 올리기\r\nfunction addPostAPI(postData){\r\n    return axios.post(\"/post\", postData,{\r\n        withCredentials: true\r\n    });\r\n}\r\nfunction* addPost(action) {\r\n    try {\r\n      const result = yield call(addPostAPI, action.data);\r\n      yield put({\r\n        type: ADD_POST_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) {\r\n      yield put({\r\n        type: ADD_POST_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n}\r\nfunction* watchAddPost(){\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\n// 게시물 로드하기\r\nfunction loadMainPostsAPI() {\r\n    return axios.get('/posts');\r\n} \r\nfunction* loadMainPosts() {\r\n    try {\r\n      const result = yield call(loadMainPostsAPI);\r\n      yield put({\r\n        type: LOAD_MAIN_POSTS_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) {\r\n      yield put({\r\n        type: LOAD_MAIN_POSTS_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n}  \r\nfunction* watchLoadMainPosts() {\r\n    yield takeLatest(LOAD_MAIN_POSTS_REQUEST, loadMainPosts);\r\n}\r\n\r\n\r\n// 그룹 만들기\r\nfunction addGroupPosttAPI(){\r\n    // return axios.post(\"/gpost\", gpostData,{\r\n    //     withCredentials: true\r\n    // });\r\n}\r\nfunction* addGroupPost(action){\r\n    try{\r\n        yield delay(2000);\r\n        yield put({\r\n            type: ADD_GROUP_SUCCESS,\r\n            data:{\r\n                postId : action.data.postId,\r\n            },\r\n        });\r\n    } catch (e){ \r\n        yield put({\r\n            type: ADD_GROUP_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\nfunction* watchAddGroupPost(){\r\n    yield takeLatest(ADD_GROUP_REQUEST, addGroupPost);\r\n}\r\n\r\n\r\n// 댓글 올리기\r\nfunction addCommentAPI(){\r\n    // return axios.post(\"/comment\", commentData,{\r\n    //     withCredentials: true\r\n    // });\r\n}\r\nfunction* addComment(action){\r\n    try{\r\n        yield delay(2000);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data:{\r\n                postId : action.data.postId,\r\n            },\r\n        });\r\n    } catch (e){ \r\n        console.error(e);\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\nfunction* watchAddComment(){\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\n\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchLoadMainPosts),\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n        fork(watchAddGroupPost),\r\n    ]);\r\n}\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAOA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAMA;;;;A","sourceRoot":""}