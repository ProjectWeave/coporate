{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.303f592e57c61a8f3ce6.hot-update.js","sources":["webpack:///./components/File.js"],"sourcesContent":["//import React from 'react';\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\n//import { useSelector, useDispatch } from 'react-redux';\r\n//import axios from 'axios';\r\nimport './Templete.css';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {  ADD_GROUP_REQUEST } from '../reducers/post';\r\n\r\n\r\nconst File = () => {\r\n    const dispatch = useDispatch();\r\n    const [text, setText ] = useState('');\r\n    //const [file, setFile ] = useState(null);\r\n    //const [selctedFile, setSelctedFile ] = useState(null);\r\n    const { addingGroupPost, addedGroupPost } = useSelector(state => state.post);\r\n    \r\n    //text 초기값\r\n    const [grouptit, setGrouptit] = useState('');\r\n    const [grouptext, setGrouptext] = useState('');\r\n\r\n    const InputChangeTit = () => {\r\n      e.preventDefault();\r\n      console.log(value)\r\n      setGrouptit(target.value);\r\n    };\r\n    const InputChangeText = (e) => {\r\n      setGrouptext(e.target.value);\r\n    };\r\n\r\n    //단일 이미지 미리보기\r\n    const [img, setImg] = useState(null);\r\n    const onChangeImage = useCallback((e)=>{\r\n        var reader = new FileReader();\r\n        reader.readAsDataURL(e.target.files[0]);\r\n        reader.onloadend = function () {\r\n            setImg(reader.result)\r\n          }\r\n    },[])\r\n\r\n    // 취소버튼클릭시 파일창닫기\r\n    const popBlockClose = (e) => {\r\n      e.preventDefault();\r\n      let pop = document.querySelector(\".pop\")\r\n      let block = document.querySelector(\".block\")\r\n      pop.style.display=\"none\"\r\n      block.style.display=\"none\"\r\n      setGrouptit('');\r\n      setGrouptext('');\r\n      setImg(null);\r\n    };\r\n    \r\n    // 그룹만들기서브밋\r\n    const onSubmitGroup = useCallback((e) => {\r\n      e.preventDefault();\r\n      dispatch({\r\n          type: ADD_GROUP_REQUEST,\r\n          data: {\r\n              text,\r\n              img,\r\n          },\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setText('');\r\n  },[addedGroupPost === true]);\r\n \r\n\r\n    return (\r\n      <form className=\"pop\" onSubmit={onSubmitGroup}>\r\n        <div className=\"gimg\">\r\n          <img src={img} ></img>\r\n        </div>\r\n        \r\n        <div className=\"filebox\">\r\n          <label htmlFor =\"file\" >사진을 선택해주세요.</label>\r\n          <input type = \"file\" id=\"file\" onChange={onChangeImage} \r\n                 accept=\".jpg, .jpeg, .png\" className=\"upload\" /> \r\n        </div>\r\n        \r\n        <div className=\"group\">\r\n          <label htmlFor =\"name\" className=\"gtit\"> 그룹이름</label>\r\n          <input type=\"text\" name=\"gname\" className=\"gname\" value={grouptit} onChange={InputChangeTit} />\r\n          <label htmlFor =\"name\" className=\"gtit\"> 그룹소개</label>\r\n          <input type=\"text\" name=\"gintro\" className=\"gintro\" value={grouptext} onChange={InputChangeText} />\r\n          <p className=\"send\">\r\n            <input type=\"submit\" value=\"올리기\" loading={addingGroupPost} />\r\n            <input type=\"button\" value=\"취소\" onClick={popBlockClose} />\r\n          </p>\r\n        </div>\r\n      </form>\r\n    );\r\n};\r\nexport default File;\r\n\r\n// const handleChange = (event) => {\r\n//   //console.log(event.target);\r\n//   setFile({\r\n//     file: URL.createObjectURL(event.target.files[0])\r\n//   });\r\n// };\r\n\r\n// const fileUpSelcetedHandler = (event) => {\r\n//   //console.log(event.target.file);\r\n//   setSelctedFile({\r\n//     selctedFile:event.target.file[0]\r\n//   })\r\n// };\r\n  \r\n// const fileUploadHandler = () => {\r\n//     axios.post('');\r\n// };\r\n\r\n\r\n// class File extends React.Component{\r\n//   constructor(props){\r\n//     super(props);\r\n//     this.state = {\r\n//       file: null\r\n//     }\r\n//     this.handleChange = this.handleChange.bind(this)\r\n//   }\r\n//   handleChange(event) {\r\n//     this.setState({\r\n//       file: URL.createObjectURL(event.target.files[0])\r\n//     })\r\n//   }\r\n//   state={\r\n//     selctedFile:null\r\n//   }\r\n//   fileUpSelcetedHandler=event=>{\r\n//     //console.log(event.target.file);\r\n//     this.setState({\r\n//       selctedFile:event.target.file[0]\r\n//     })\r\n//   }\r\n\r\n//   fileUploadHandler=()=>{\r\n//     axios.post('');\r\n//   }\r\n\r\n\r\n//   render(){\r\n//     return(\r\n//       <form className=\"pop\" onSubmit={onSubmitGroup}>\r\n//           <div className=\"gimg\">\r\n//             <img src={this.state.file}/>\r\n//           </div>\r\n//           {/* <input type=\"image\" alt=\"submit\"></input> */}\r\n//           <div className=\"filebox\">\r\n//             <label htmlFor =\"file\">사진을 선택해주세요.</label>\r\n//             <input type=\"file\" id=\"file\" name=\"file\" size=\"2000\" \r\n//                    accept=\".jpg, .jpeg, .png\" className=\"upload\"\r\n//                    onChange={this.handleChange} />\r\n//           </div>\r\n//           <div className=\"group\">\r\n//             <label htmlFor =\"name\" className=\"gtit\"> 그룹이름</label>\r\n//             <input type=\"text\" name=\"gname\" className=\"gname\" />\r\n//             <label htmlFor =\"name\" className=\"gtit\"> 그룹소개</label>\r\n//             <input type=\"text\" name=\"gintro\" className=\"gintro\" />\r\n//             <p className=\"send\">\r\n//               <input type=\"submit\" value=\"올리기\"\r\n//                      onClick={this.fileUploadHandler}\r\n//               />\r\n//               <input type=\"reset\" value=\"취소\" onClick={function(){\r\n//                 var pop = document.querySelector(\".pop\")\r\n//                 var block = document.querySelector(\".block\")\r\n//                 pop.style.display=\"none\"\r\n//                 block.style.display=\"none\"\r\n//               }} />\r\n//             </p>\r\n//             {this.props.children}\r\n//           </div>\r\n//         </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\n//   export default File;\r\n\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;A","sourceRoot":""}