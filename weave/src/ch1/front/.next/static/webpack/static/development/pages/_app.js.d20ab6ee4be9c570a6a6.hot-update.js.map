{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.d20ab6ee4be9c570a6a6.hot-update.js","sources":["webpack:///./components/File.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport PostForm from './PostForm';\r\nimport '../routes/Templete.css';\r\n\r\nclass File extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      file: null\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n  }\r\n  handleChange(event) {\r\n    this.setState({\r\n      file: URL.createObjectURL(event.target.files[0])\r\n    })\r\n  }\r\n  state={\r\n    selctedFile:null\r\n  }\r\n  fileUpSelcetedHandler=event=>{\r\n    //console.log(event.target.file);\r\n    this.setState({\r\n      selctedFile:event.target.file[0]\r\n    })\r\n  }\r\n\r\n  fileUploadHandler=()=>{\r\n    axios.post('');\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <form className=\"pop\">\r\n          <div className=\"gimg\">\r\n            <img src={this.state.file}/>\r\n          </div>\r\n          {/* <input type=\"image\" alt=\"submit\"></input> */}\r\n          <div className=\"filebox\">\r\n            <label htmlFor =\"file\">사진을 선택해주세요.</label>\r\n            <input type=\"file\" id=\"file\" name=\"file\" size=\"2000\" \r\n                   accept=\".jpg, .jpeg, .png\" className=\"upload\"\r\n                   onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"group\">\r\n            <label htmlFor =\"name\" className=\"gtit\"> 그룹이름</label>\r\n            <input type=\"text\" name=\"gname\" className=\"gname\" />\r\n            <label htmlFor =\"name\" className=\"gtit\"> 그룹소개</label>\r\n            <input type=\"text\" name=\"gintro\" className=\"gintro\" />\r\n            <p className=\"send\">\r\n              <input type=\"submit\" value=\"올리기\"\r\n                     onClick={this.fileUploadHandler}\r\n              />\r\n              <input type=\"reset\" value=\"취소\" onClick={function(){\r\n                var pop = document.querySelector(\".pop\")\r\n                var block = document.querySelector(\".block\")\r\n                pop.style.display=\"none\"\r\n                block.style.display=\"none\"\r\n              }} />\r\n            </p>\r\n            {this.props.children}\r\n          </div>\r\n        </form>\r\n    );\r\n  }\r\n}\r\n\r\n  export default File;\r\n\r\n\r\n//   import React, { useCallback, useState, useEffect } from 'react';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n// import { ADD_POST_REQUEST } from '../reducers/post';\r\n\r\n//임시로만든 데이터객체\r\n// const dummy={\r\n//     isLoggedIn: true,\r\n//     imagePaths:[],\r\n//     mainPosts:[{\r\n//         User:{\r\n//             id: 1,\r\n//             nickname: \"두리안\",\r\n//         },\r\n//             content: \"첫번째 게시글\",\r\n//             img:\"https://img1.daumcdn.net/thumb/R720x0/?fname=http://t1.daumcdn.net/liveboard/dailylife/187ea4bc2ad54b1db5030743265c5397.jpg\", \r\n//     }],\r\n// };\r\n\r\n// const PostForm = () => {\r\n//     const dispatch = useDispatch();\r\n//     const [text, setText ] = useState('');\r\n//     const { imagePaths, isAddingPost, postAdded } = useSelector(state => state.post);\r\n    \r\n//     useEffect(() => {\r\n//         setText('');\r\n//     },[postAdded === true]);\r\n\r\n//     const onSubmitForm = useCallback((e) => {\r\n//         e.preventDefault();\r\n//         dispatch({\r\n//             type: ADD_POST_REQUEST,\r\n//             data: {\r\n//                 text,\r\n//             },\r\n//         });\r\n//     }, []);\r\n    \r\n//     const onChangeText = useCallback((e) => {\r\n//         setText(e.target.value);\r\n//     }, []);\r\n    \r\n//     return (\r\n//         <form style={{ margin: '10px 0 20px'}} encType=\"multipart/form-data\" onSubmit={onSubmitForm}>\r\n//             <input htmlType=\"textarea\" maxLength={140} placeholder=\"소식을 남겨주세요\" value={text} onChange={onChangeText}></input>\r\n//             <div>\r\n//                 <input type=\"file\" multiple hidden></input>\r\n//                 <button>이미지 업로드</button>\r\n//                 <button style={{float:\"right\"}} htmlType=\"submit\" loading={isAddingPost}>짹짹</button>\r\n//             </div>\r\n//             <div>\r\n//                 {/* 반복문 */}\r\n//                 {imagePaths.map((v) => (\r\n//                         <div key={v} style={{display:\"inline-block\"}}>\r\n//                             <img src={`http://localhost:3065/${v}`} style={{ width:'200px'}} alt={v}></img> \r\n//                             <div>\r\n//                                 <button>제거</button>\r\n//                             </div>   \r\n//                         </div>\r\n//                 ))}\r\n//             </div>\r\n//         </form>\r\n//     );\r\n// };\r\n\r\n// export default PostForm;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAaA;AADA;AACA;AAbA;AAgBA;AACA;AACA;AADA;AAGA;AACA;AArBA;AAuBA;AACA;AACA;AAvBA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAcA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AA7DA;AACA;AA8DA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;A","sourceRoot":""}