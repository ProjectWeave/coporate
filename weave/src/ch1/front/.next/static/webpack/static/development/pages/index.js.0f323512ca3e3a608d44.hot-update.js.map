{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.0f323512ca3e3a608d44.hot-update.js","sources":["webpack:///./components/Join.js"],"sourcesContent":["import React, { useState,useCallback, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { SIGN_UP_REQUEST } from '../reducers/user';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Router from 'next/router';\r\nimport './Join.css';\r\n\r\nconst TextInput=({value})=>{\r\n    return(\r\n        <div>{value}</div> //npmjs.com\r\n    )\r\n};\r\n\r\nTextInput.propTypes={\r\n    value: PropTypes.string,\r\n};\r\n\r\n //커스텀훅\r\n export const useInput = (initValue = null)=>{\r\n    const [value, setter] = useState(initValue);\r\n    const handler = useCallback((e)=>{\r\n        setter(e.target.value);\r\n    },[]);\r\n    return[value, handler];\r\n};\r\n\r\n\r\nconst Join = () => {\r\n    const [passwordCheck, setPasswordCheck] = useState();\r\n    const [term, setTerm] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const [termError, setTermError] = useState(false);\r\n\r\n    const [id, onChangeId] = useInput();\r\n    const [nick, onChangeNick] = useInput();\r\n    const [password, onChangePassword] = useInput();\r\n    const dispatch = useDispatch();\r\n    const { isSigningUp,me } = useSelector(state=> state.user);\r\n\r\n    useEffect((me) => {\r\n        if(me){\r\n            alert('로그인했으니 메인페이지로 이동합니다.');\r\n            Router.push(\"/indexpage\");\r\n        }\r\n    }, [me && me.id]);\r\n\r\n\r\n    const onSubmit= useCallback((e)=>{\r\n        e.preventDefault();\r\n        if(password !== passwordCheck){\r\n            return setPasswordError(true);\r\n        }\r\n        if(!term){\r\n            return setTermError(true);\r\n        }\r\n        dispatch({\r\n            type : SIGN_UP_REQUEST,\r\n            data : {\r\n                id,\r\n                password,\r\n                nick,\r\n            },\r\n        });\r\n    },[password, passwordCheck, term]);\r\n\r\n    // const onChangeId=(e)=>{\r\n    //     setId(e.target.value);\r\n    // };\r\n    \r\n    // const onChangeNick=(e)=>{\r\n    //     setNick(e.target.value);\r\n    // };\r\n    \r\n    // const onChangePassword=(e)=>{\r\n    //     setPassword(e.target.value);\r\n    // };\r\n    \r\n    const onChangePasswordCheck=useCallback((e)=>{\r\n        setPasswordError(e.target.value !== password); //비밀번호체크\r\n        setPasswordCheck(e.target.value);\r\n    },[password]);\r\n    \r\n    const onChangeTerm=useCallback((e)=>{\r\n        setTermError(false); //setTermError메세기 기본적으로 꺼두기\r\n        setTerm(e.target.checked);\r\n    },[]);\r\n\r\n   \r\n    return(\r\n        <>\r\n            <div className=\"logo_\"></div>\r\n            <div className=\"rbg2\">\r\n                <form onSubmit={onSubmit} className=\"joinForm\">\r\n                    <div>\r\n                        <label htmlFor=\"user-id\" className=\"bld\"/>\r\n                        <input name=\"user-id\"  value={id} required onChange={onChangeId} className=\"tbox\" placeholder=\"아이디를 입력하세요.\" />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"user-nick\" className=\"bld\" />\r\n                        <input name=\"user-nick\" value={nick} required onChange={onChangeNick} className=\"tbox\" placeholder=\"닉네임을 입력하세요.\"/>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"user-password\" className=\"bld\" />\r\n                        <input name=\"user-password\" type=\"password\" value={password} required onChange={onChangePassword} className=\"tbox\" placeholder=\"비밀번호를 입력하세요.\" />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"user-password-chk\" className=\"bld\" />\r\n                        <input name=\"user-password-chk\" type=\"password\" value={passwordCheck} required onChange={onChangePasswordCheck} className=\"tbox\" placeholder=\"비밀번호를 확인하세요.\" />\r\n                        {passwordError && <div style={{color:'red'}}>비밀번호가 일치하지 않습니다.</div>}\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"checkbox\" name=\"user-term\" checked={term} onChange={onChangeTerm} />개인정보 수집 및 이용에 동의합니다.\r\n                        {termError && <div style={{color:'red'}}>약관에 동의하셔야합니다.</div>}\r\n                    </div>\r\n                    <div className=\"joinBtn\">\r\n                        <button htmlType=\"submit\" loading={isSigningUp}>가입하기</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Join;\r\n\r\n\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AADA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;A","sourceRoot":""}